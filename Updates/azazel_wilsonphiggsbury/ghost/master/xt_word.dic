//-----Envelopes-----

exampleenvelope
{
	"result 1"
	"result 2"
	"result 3"
}

usersfolder
{
	"start bar"
	"Documents folder"
	"Pictures folder"
	"Music folder"
	"Games folder"
	"secret folder"
}

filetype
{
	".txt"
	".dic"
	".png"
	".jpg"
	".jpeg"
	".mp3"
	".exe"
	".bat"
	".cfg"
	".wav"
	".pdf"
	".dat"
	".gif"
	".tiff"
	".dll"
	".pna"
	".ico"
	".dau"
	".zip"
	".nar"
	".html"
	".psd"
	".mp4"
	".ttf"
	".rar"
	".doc"
	".bmp"
	".3ds"
	".ogg"
	".ppt"
	".bat"
	".cmd"
	".py"
	".flv"
	".swf"
	".mov"
	".mpeg"
	".webm"
	".mdl"
	".nds"
	".cfg"
	".conf"
	".cnf"
	".blend"
	".dat"
}

idles
{
	"\0\s[0]"
	"\0\s[0]\i[1]"
	"\0\s[0]\i[1]\i[6]"
	"\0\s[0]\i[1]\i[7]"
	"\0\s[2]\i[70]\i[62]"
}

yulefoods
{
	"Merry Berrysauce"
	"Bibingka"
	"Cabbage Rolls"
	"Festive Fish Dish"
	"Good Gravy"
	"Latkes"
	"Lutefisk"
	"Mulled Punch"
	"Panettone"
	"Pavlova"
	"Pickled Herring"
	"Polish Cookies"
	"Pumpkin Pie"
	"Sweet Potato Casserole"
	"Roasted Turkey"
	"Stuffing"
	"Tamales"
	"Tourtiere"
}

chillynippy
{
	"chilly"
	"nippy"
}

wilrefercaps
{
	"He"
	"Wilson"
}

wilrefer
{
	"he"
	"Wilson"
}

randomWaiting
{
	"\w8"
	"\w8\w8"
	"\w8\w8\w8"
	"\w8\w8\w8\w8"
	"\w1"
	"\w2"
	"\w3"
	"\w4"
	"\w5"
	"\w6"
	"\w7"
	"\w8\w7"
	"\w8\w1"
	"\w8\w8\w8\w8\w8\w7"
}

tastyfiles
{
	"bland"
	"sweet"
	"savory"
	"watery"
	"crumbly"
	"dusty"
	"weird"
}

drowsymumbling
{
	"mm"
	"hm"
	"huh"
	"nm"
	"mh"
	"nh"
	"ngh"
	"nmh"
	"gnh"
	"mgh"
	"snk"
	"zzk"
	"mghk"
}

thingisShorten
{
	"'s"
	" is"
}

weAreShortCap
{
	"We're"
	"We are"
}

weAreShort
{
	"we're"
	"we are"
}

outtaOutOf
{
	"outta"
	"out of"
}

itwillShortenCap
{
	"It'll"
	"It will"
}

itwillShorten
{
	"it'll"
	"it will"
}

nowisShort
{
	"now's"
	"now is"
}

ingShort
{
	"in'"
	"ing"
}

whyisShort
{
	"why is"
	"Why's"
}

whyisShortCap
{
	"Why is"
	"Why's"
}

iwillShort
{
	"I'll"
	"I will"
}

whatisShortCap
{
	"What's"
	"What is"
}

whatisShort
{
	"what's"
	"what is"
}

howisShort
{
	"how is"
	"how's"
}

howisShortCap
{
	"How is"
	"How's"
}

thatisShort
{
	"that's"
	"that is"
}

thatisShortCap
{
	"That's"
	"That is"
}

iamShortener
{
	"I'm"
	"I am"
	"'m"
}

youknowShortener
{
	"You know"
	"Y'know"
}

itisShorten
{
	"It is"
	"It's"
}

itisShortenNoCap
{
	"it is"
	"it's"
}

othersurvivors
{
	"Maxwell"
	"Willow"
	"Wendy"
	"Webber"
	"Wickerbottom"
	"Wolfgang"
	"WX-78"
	"Woodie"
	"Walter"
	"Wurt"
	"Warly"
	"Wormwood"
	"Wanda"
}

survivorsminuswalter
{
	"Maxwell"
	"Willow"
	"Wendy"
	"Webber"
	"Wickerbottom"
	"Wormwood"
	"Wolfgang"
	"WX-78"
	"Warly"
	"Wurt"
	"Wanda"
}

farmingplants
{
	"carrots"
	"corn"
	"potatoes"
	"toma roots"
	"asparagus"
	"eggplants"
	"pumpkins"
	"watermelons"
	"dragon fruits"
	"durians"
	"garlic"
	"onions"
	"pepper"
	"pomegranates"
}

rwysweeds
{
	"forget-me-lots"
	"fire nettles"
	"tillweeds"
	"bindweeds"
	"spiny bindweeds"
}

foodvegetable
{
	"%(foodrawveg)"
	"%(foodcookedveg)"
	"%(foodshrooms)"
}

foodrawveg
{
	"carrot"
	"corn"
	"eggplant"
	"pumpkin"
	"blue cap"
	"blue cap mushroom"
	"green cap"
	"green cap mushroom"
	"red cap"
	"red cap mushroom"
	"mandrake"
	"petal"
	"dark petal"
	"petals"
	"dark petals"
	"foliage"
	"leafy greens"
	"glow berry"
	"lichen"
	"cactus flesh"
	"raw cactus"
	"cactus flower"
	"succulent"
	"kelp fronds"
	"raw kelp"
	"ripe stone fruit"
	"garlic"
	"onion"
	"pepper"
	"potato"
	"toma root"
	"popperfish"
	"corn cod"
	"moon shroom"
	"moon mushroom"
	"moon cap"
}

foodcookedveg
{
	"roasted carrot"
	"popcorn"
	"braised eggplant"
	"hot pumpkin"
	"cooked blue cap"
	"cooked blue shroom"
	"cooked blue mushroom"
	"cooked blue cap mushroom"
	"cooked green cap"
	"cooked green shroom"
	"cooked green mushroom"
	"cooked green cap mushroom"
	"cooked red cap"
	"cooked red shroom"
	"cooked red mushroom"
	"cooked red cap mushroom"
	"cooked mandrake"
	"cooked cactus flesh"
	"cooked cactus"
	"cooked kelp fronds"
	"cooked stone fruit"
	"roasted garlic"
	"roasted onion"
	"roasted potato"
	"roasted pepper"
	"roasted toma root"
	"cooked moon shroom"
	"cooked moon cap"
	"cooked moon mushroom"
}

foodshrooms
{
	"red cap"
	"red shroom"
	"red mushroom"
	"red cap mushroom"
	"green cap"
	"green shroom"
	"green mushroom"
	"green cap mushroom"
	"blue cap"
	"blue shroom"
	"blue cap mushroom"
	"blue mushroom"
	"moon shroom"
	"moon mushroom"
	"moon cap"
}

foodmeat
{
	"%(foodrawmeat)"
	"%(foodcookedmeat)"
}

foodrawmeat
{
	"batilisk wing"
	"drumstick"
	"eel"
	"fish"
	"frog legs"
	"koalefant trunk"
	"winter koalefant trunk"
	"leafy meat"
	"meat"
	"regular meat"
	"monster meat"
	"dubious meat"
	"purple meat"
	"morsel"
	"meat chunk"
	"guardian's horn"
	"deerclops eyeball"
	"raw fish"
	"dead wobster"
	"fish morsel"
	"fish chunk"
	"barnacles"
	"naked nostrils"
}

foodcookedmeat
{
	"cooked batilisk wing"
	"fried drumstick"
	"cooked eel"
	"cooked fish"
	"cooked frog legs"
	"koalefant trunk steak"
	"cooked leafy meat"
	"cooked meat"
	"cooked monster meat"
	"cooked dubious meat"
	"cooked purple meat"
	"cooked morsel"
	"cooked meat chunk"
	"fish steak"
	"cooked wobster"
	"cooked fish morsel"
	"cooked fish chunk"
	"cooked barnacles"
	"charred nostrils"
}

fishyfishy
{
	"%(foodfreshfishbig)"
	"%(foodfreshfishsmall)"
	"%(seasonalfishy)"
}

seasonalfishy
{
	if season == "Winter"
	{
		"ice bream"
	}
	elseif season == "Summer"
	{
		"scorching sunfish"
	}
	elseif season == "Spring"
	{
		"bloomfin tuna"
	}
	else //ASSUMING AUTUMN.
	{
		"fallounder"
	}
}

foodfreshfishsmall
{
	"freshwater fish"
	"live eel"
	"wobster"
	"runty guppy"
	"needlenosed squirt"
	"bitty baitfish"
	"smolt fry"
	//"scorching sunfish"
	"spittlefish"
}

foodfreshfishbig
{
	//"fallounder"
	//"bloomfin tuna"
	"mudfish"
	"deep bass"
	"dandy lionfish"
	"black catfish"
	//"ice bream"
	"dappled koi"
	"golden koi"
	"sweetish fish"
}

//-----Menu stuff-----
season //Current season
{
	if hemisphere == "Southern"
	{
		if month > 2 && month < 6; "Autumn"
		elseif month > 5 && month < 9; "Winter"
		elseif month > 8 && month < 12; "Spring"
		else; "Summer"
	}
	else
	{
		if month > 2 && month < 6; "Spring"
		elseif month > 5 && month < 9; "Summer"
		elseif month > 8 && month < 12; "Autumn"
		else; "Winter"
	}
}

//hour12 displays the hour like a 12 hour clock, except for 12 which is displayed as 0
nowhour
{
	if hour12 == 0; "12"
	else; "%(hour12)"
}

//Adding a 0 to the minute if it's under 10
nowmin
{
	if minute < 10; "0%(minute)"
	else; "%(minute)"
}

//Same as above but with the runtime minutes
runmin
{
	if runtime[1] < 10; "0%(runtime[1])"
	else; "%(runtime[1])"
}

//Tracks the hours and minutes that the ghost has been open. This will reset if you reload
runtime : array
{
	ghostupmin / 60
	ghostupmin % 60
}

// totalhours //Would like to find out why this is so far into the negatives for me... How strange.
// {
	// ghostupmin_total / 60
// }

//AM or PM - ampm is 0 during am, and 1 during pm
ap
{
 	if ampm == 0; "AM"
 	else; "PM"
}

//Abbreviated week day
wd
{
	if weekday == 0; "Sun"
	elseif weekday == 1; "Mon"
	elseif weekday == 2; "Tue"
	elseif weekday == 3; "Wed"
	elseif weekday == 4; "Thu"
	elseif weekday == 5; "Fri"
	else; "Sat"
}

//Full week day
nowday
{
	_weekday = weekday
	if _argv[0] == "next"
	{
		_weekday++
		if _weekday > 6; _weekday = 0
	}
	if _argv[0] == "last"
	{
		_weekday--
		if _weekday < 0; _weekday = 6
	}
	
	if GETTYPE(_argv[0]) == 1 //If it's an integer
	{
		while _argv[0] > 6; {_argv[0] -= 7}
		while _argv[0] < 0; {_argv[0] += 7}
		_weekday = _argv[0]
	}
	
	if _weekday == 0; "Sunday"
	elseif _weekday == 1; "Monday"
	elseif _weekday == 2; "Tuesday"
	elseif _weekday == 3; "Wednesday"
	elseif _weekday == 4; "Thursday"
	elseif _weekday == 5; "Friday"
	else; "Saturday"
}

//The current month name
nowmonth
{
	_month = month
	
	if _argv[0] == "next"
	{
		_month++
		if _month > 12; _month = 1
	}
	if _argv[0] == "last"
	{
		_month--
		if _month < 1; _month = 12
	}
	
	if GETTYPE(_argv[0]) == 1 //If it's an integer
	{
		while _argv[0] > 12; {_argv[0] -= 12}
		while _argv[0] < 1; {_argv[0] += 12}
		_month = _argv[0]
	}
	
	if _month == 1; "January"
	elseif _month == 2; "February"
	elseif _month == 3; "March"
	elseif _month == 4; "April"
	elseif _month == 5; "May"
	elseif _month == 6; "June"
	elseif _month == 7; "July"
	elseif _month == 8; "August"
	elseif _month == 9; "September"
	elseif _month == 10; "October"
	elseif _month == 11; "November"
	else; "December"
}

//Checks if this is a leap year
leapyear
{
	if year % 4 != 0; 0
	elseif year % 100 != 0; 1
	elseif year % 400 != 0; 0
	else; 1
}

//From the GT template. Breaking down the day into a few distinct chunks so you dont have to add checks for every hour.
timeslot
{
	if hour >= 5 && hour <= 8; "earlymorning" //5-8am
	elseif hour >= 9 && hour <= 11; "morning" //9-11am
	elseif hour >= 12 && hour <= 14; "lunch" //12-2pm
	elseif hour >= 15 && hour <= 17; "afternoon" //3-5pm
	elseif hour >= 18 && hour <= 20; "evening" //6-8pm
	elseif hour >= 21 && hour <= 24; "latenight" //9pm-12am
	else; "midnight" //1-4am
}