OpenSakuraMenu
{
	if AutoUpdates[1] == 2 //If an update is available, the user will be notified when they try to open the menu
	{
		"\0\s[0]An update is available!\w8\w8 Do you want to download it?"
		--
		//Note: the download it now option will go straight into updating without directing to another function. You can do this with some things using 'script:' in the function name, but it's finicky. If this gives you issues feel free to replace it.
		--; "\_q\n\n"
		--; "\![*]\q[Download it now,script:\![updatebymyself\]]\n"
		--; "\![*]\q[Maybe later,UpdateLater]\n\n"
		--; "\![*]\q[Turn off auto updates,UpdateOff]\e"
	}
	else //Normal menu opening
	{
		if totalpunches >= 5
		{
			"\0\b2\s[0]..."
		}
		else
		{
			if annoyancelevels >= 75
			{
				"\0\b2\s[0]What do you want?"
				"\0\b2\s[0]Oh, what now?"
			}
			if tirednesslevels >= 75
			{
				"\0\b2\s[0]Nooooo. Wilson isn't here."
				"\0\b2\s[0]Apologies if things seem mildly illegible."
			}
			"\0\b2\s[0]What's up?"
			"\0\b2\s[0]Did you want something, %(username)?"
			"\0\b2\s[0]What is it?"
		}
		--
		OnMenuRun
	}
}

Select.UpdateLater //If the user decides to update later
{
	AutoUpdates[1] = 1
	
	if totalpunches >= 5
	{
		"\0\s[0]...I'll remind you once a day.\e"
	}
	else
	{
		if annoyancelevels >= 75
		{
			"\0\s[0]Fine, I'll remind you about this once a day. Mark my words.\e"
		}
		if hunger <= 50
		{
			"\0\s[0]Do I get free food for reminding you about this once a day?\e"
		}
		"\0\s[0]Alright,\w4 I'll remind you once a day.\e"
		"\0\s[0]Turning this on means that I have to remind you once a day to update something or other.\e"
		"\0\s[0]If you get annoyed with daily update notifications, then you can just turn it off in the menu.\e"
	}
}

Select.UpdateOff //If the user no longer wants to be notified about updates
{
	AutoUpdates[0] = "Off"
	AutoUpdates[1] = 1
	
	
	if totalpunches >= 5
	{
		"\0\s[0]...I've turned it off.\e"
	}
	else
	{
		if annoyancelevels >= 75
		{
			"\0\s[0]What, was this too annoying for you?\e"
			"\0\s[0]Fine, I'll switch this setting off. It was annoying the hell out of me anyways.\e"
			"\0\s[0]As usual, the function is probably in the functions menu. Turn it on whenever, just don't bother me while doing so.\e"
		}
		if tirednesslevels >= 75
		{
			"\0\s[0]Oh, good, I don't have to talk as much!\e"
			"\0\s[0]The one thing I can celebrate: not having to make an uncomfortable amount of eye contact when telling you that there's an update available!\e"
			"\0\s[0]The one thing I can celebrate: not having to talk as much.\e"
			"\0\s[0]You can turn them back on whenever. I'm just glad I don't have to do this thing daily anymore.\e"
		}
		"\0\s[0]Auto Update checks turned off.\w8 You can turn them back on whenever, they're just in the config menu.\e"
		"\0\s[0]Auto Update checks have been turned off.\e"
		"\0\s[0]I've turned those automatic update checks off for you. No need to thank me.\e"
		"\0\s[0]I've turned those automatic update checks off for you.\e"
		"\0\s[0]I've turned those automatic update checks off.\e"
		"\0\s[0]The automatic update checking has been turned off for you. No need to thank me.\e"
		"\0\s[0]The automatic update checking has been turned off. Re-enable it whenever, you probably know where to find it.\e"
	}
}

OnMenuRun //Main menu
{
	"\b2\n\n\_q"
	--
	if lastTalk != ""; "\![*]\q[Repeat last dialogue,OnLastTalk]"
	--; "\n"
	--; "\![*]\q[Say something,OnAiTalk]\n"
	--; "\![*]\q[Talk to another ghost,OnStartTalking]\n\n[half]"
	--; "Or, maybe you want to..."
	--; "\n"
	--; "\![*]\q[Ask some questions,OnAskMenu]\n"
	--; "\![*]\q[Do something,OnActionsMenu]\n\n[half]"
	--; "Functional Things\n"
	--; "\![*]\q[Stats,OnStatMenu]\n"
	--; "\![*]\q[Functions,OnFunctionMenu]\n"
	--; "\![*]\q[Config,OnConfigMenu]\n\n"
	--
	if debug == 1 //%(debug = 1) in script input to show the debug options
	{
		--; "\![*]\q[Test Variable,OnTestVar]\n"
		--; "\![*]\q[To-do list,OnTemplateTodo]\n"
		--; "\![*]\q[Check Template Version,OnTemplateUpdate]\n\n"
		//The template update check is in zzz_todo.dic. It doesn't do a network update, it checks my website and compares your version to the most recent version. It cannot update automatically, so as not to erase your progress.
	}
	--; "\![*]\q[Nevermind,Cancel]\n\n"
	--
	"\nRuntime: %(runtime[0]):%(runmin)%(newline)\f[align,right]Version %(ghostver)\e"
}

OnLastTalk //Repeats the last thing the ghost said
{
	if tirednesslevels >= 70
	{
		"\0\s[0]...I forgot what I just said...\e"
		"\0\s[0]Hm? Oh. I... uh. I forgot what I said.\e"
	}
	if annoyancelevels >= 50
	{
		"\0\s[0]I don't like repeating myself, %(username). Now, listen closely. I said: \n\n[half]%(lastTalk).\e"
	}
	"%(lastTalk)\e"
	"\0\s[0]If I remember correctly, I said: \n\n[half]%(lastTalk)\e"
	"\0\s[0]Weren't you listening? Fine, I'll repeat myself. \n\n[half]%(lastTalk)\e"
	"\0\s[0]Fine, I'll say what I just said again. \n\n[half]%(lastTalk)\e"
	//"\0\s[0]I'm not fond of repeating myself, %(username). I said: %(lastTalk)\e"
}

//----ACTIONS MENU----
//POSITIVE ACTS: compliment, ramble
//NEUTRAL ACTS: puzzle, riddle
//NEUTRAL ACT, IF PUNCHED ONCE: apologize
//ANNOYING ACTS: pet (until he gets used to it), nitpick, touch face, poke
//NEGATIVE ACTS: punch, mock, threaten
OnActionsMenu
{
	"\b2\_q"
	--
	"\![*]\q[Compliment,complimentarycompliment] "
	--	
	if totalpunches == 0; "\![*]\q[Ramble,rambletalker] "
	--
	"\![Puzzle,thisremindsmeofa]"
	--
	"\n\n[half]%(BackToMain)\e"
}

Select.thisremindsmeofa
{
	if totalpunches >= 5
	{
		"\0\s[0]...\e"
	}
	else
	{
		if totalpets >= 100
		{
			"\0\s[0]Hmm. Here's a puzzle for you, why on earth do you have such an obsession with stroking my hair? I don't get it."
			"\0\s[0]Hmm. Your behaviour towards me has been rather puzzling, frankly. You keep petting me."
		}
		if tirednesslevels >= 75
		{
			"\0\s[0]...I'm not going to be able to focus on this properly.\e"
			"\0\s[0]...I'm tired. Maybe later.\e"
			"\0\s[0]Not in the mood for this. After a nap, maybe.\e"
		}
		if annoyancelevels >= 75
		{
			"\0\s[0]I'm not in the mood for this, %(username)."
			"\0\s[0]Quit bothering me with this, I'm not in the mood."
			"\0\s[0]This is wasting my time."
		}
		if hunger <= 50
		{
			"\0\s[0]I'm too hungry to focus on this."
		}
		//rubiks cube
		{
			"\0\s[0]Oh! A Rubik's Cube...? "
			"\0\s[0]Oh! A colour cube... "
			--
			"I'll have to see if I can't solve this."
			"Apparently it's possible to solve one of these in as little as twenty-five moves."
			"Apparently the developer's mother could do one or two sides of one of these."
			"Walter might enjoy this a bit more than I would."
		}
		
		//sliding block puzzle
		{
			"\0\s[0]Ah, one of the slidey-block puzzles. "
			"\0\s[0]Is this a sliding block puzzle? "
			--
			"Interesting gift. I used to enjoy these a bit more often as a kid."
			"Interesting. I might see if Wurt wants this."
		}
		
		//puzzle pieces
		{
			"\0\s[0]Ah, one of those jigsaw puzzles. "
			"\0\s[0]Is this a jigsaw puzzle? "
			--
			"I can't really accept this, unfortunately. The pieces are far, far too easy to lose. Maybe you should give it to somebody else you've got in your... thing."
			"Wickerbottom would probably enjoy this, if it weren't for the fact that the pieces would be rather easy to lose..."
			"The pieces would be far too easy to lose. I can't accept it, maybe you should try giving it to somebody else."
		}
		
		"\0\s[0]I've never seen this one before."
		"\0\s[0]This is certainly unique. I haven't seen anything like this before."
	}
	--
	"\n\n[half]%(BackToActions)\e"
}

Select.rambletalker
{
	if totalpunches >= 5 //shouldn't be possible but just in case.
	{
		"\0\s[0]...\e"
	}
	else
	{
		if totalpets >= 100
		{
			"\0\s[0]I'm moderately surprised it wasn't a ramble about petting me."
			"\0\s[0]Hm. Well, I'm happy to hear that it's not a ramble about petting me."
		}
		if tirednesslevels >= 75
		{
			"\0\s[0]I didn't get half of that, unfortunately."
		}
		if annoyancelevels >= 50
		{
			"\0\s[0]...This doesn't concern me at all."
		}
		"\0\s[0]...You've got me interested and itching to find out more about that subject, now."
		"\0\s[0]Do you not have anything else to say on this subject? I find it rather... interesting."
		"\0\s[0]...Intriguing."
	}
	--
	"\n\n[half]%(BackToActions)\e"
}

Select.complimentarycompliment
{
	if totalpunches >= 3 && totalpunches <= 10
	{
		negativeinteractions += 1
		"\0\s[0]..."
		"\0\s[0]My face isn't punchable."
		"\0\s[0]You-! You passive-aggressive piece of..."
		"\0\s[0]I'm not a bloody failure."
		"\0\s[0]Oh, please. If anything, I'm sure your mother would be disappointed in you."
	}
	elseif totalpunches >= 10
	{
		negativeinteractions += 1
		"\0\s[0]..."
	}
	else
	{
		positiveinteractions += 1
		annoyancelevels -= 1
		if totalpets >= 10
		{
			"\0\s[0]I am not that pettable, but I'll take the compliment anyways."
			"\0\s[0]My hair isn't that clean, %(username). \i[1]\i[2]\i[7]I'm fairly certain you could easily find a few leaves and twigs in there."
			"\0\s[0]My hair is the fuzziest hair you've ever seen? \i[5]Well, yes, but it's not for touching."
		}
		if annoyancelevels >= 70
		{
			"\0\s[0]...Thanks, I guess?"
			//"\0\s[0]I'm not sure why you're going to the extent of complimenting me when I'm... irate, for lack of a better word. I don't get it."
			"\0\s[0]Are you trying to cheer me up or something?"
			//"\0\s[0]Hm. Thank you. I'll... try and tone down my utter annoyance at things. It's been a tough day."
		}
		if tirednesslevels >= 70
		{
			"\0\s[0]\i[2]I don't look that cute when I'm sleeping, %(username)."
			//"\0\s[0]\i[1]\i[2]\i[9]I... I'm not sure what you mean by wanting to give me a goodnight kiss."
			"\0\s[0]The scruffy look is because I don't have the time to take care of all of the beard hair. I miss patches. I'm not exactly perfect, %(username)."
		}
		"\0\s[0]Well, yes, I am very smart, after all. I had to figure out a lot of things by myself."
		"\0\s[0]I am not a hunk, but thank you anyways?"
		"\0\s[0]Mm, yes, well. I have had to patch this waistcoat up myself several times. And clean stains out of it."
		"\0\s[0]Of course I'm knowledgeable. I put my mind into science, after all."
		"\0\s[0]My beard is usually magnificent. Unfortunately, Willow annoyed me into shaving."
	}
	--
	"\n\n[half]%(BackToActions)"
}

BackToActions
{
	"\![*]\q[Back to Actions Menu,OnActionsMenu]\n\![*]\q[Back to Main Menu,OnMenuRun]\n\![*]\q[Nevermind,Cancel]\e"
}

BackToMain
{
	"\![*]\q[Back to Main Menu,OnMenuRun]\n\n[half]\![*]\q[Nevermind,Cancel]"
}

//----STAT MENU----
OnStatMenu
{
	"\0\b2"
	--
	"Hunger: %(hunger)\n"
	--
	if totalpunches >= 5
	{
		"It doesn't matter how annoyed %(wilrefer) is."
		"It doesn't matter how annoyed %(wilrefer) is. %(wilrefercaps) can't leave."
		"You don't care how annoyed %(wilrefer) is right now."
	}
	elseif annoyancelevels >= 50 && tirednesslevels >= 75
	{
		"%(wilrefercaps) seems cranky."
	}
	elseif annoyancelevels >= 50
	{
		"%(wilrefercaps) seems annoyed."
		"You have a very annoyed scientist on your computer."
		"You have a very irritated scientist on your computer."
		"You have a very irate scientist on your computer that would probably angrily shake a stick at a higher deity. If there was one."
	}
	elseif annoyancelevels >= 25 && annoyancelevels <= 50
	{
		"%(wilrefercaps) seems a bit annoyed."
		"You have a mildly irate scientist on your computer."
		"You have an irritated scientist on your computer."
	}
	else // assuming annoyance is lower than 25
	{
		"%(wilrefercaps) seems to be in an okay mood."
		"%(wilrefercaps) doesn't seem annoyed right now."
		"You have a scientist on your computer that isn't currently annoyed at things that are beyond his control."
		"You have a scientist on your computer that isn't currently irate."
	}
	--
	"\n"
	--
	if totalpunches >= 5
	{
		"You don't care how tired %(wilrefer) is right now."
		"It doesn't matter how tired %(wilrefer) is."
		"It doesn't matter how tired %(wilrefer) is. %(wilrefercaps) can't leave."
	}
	elseif tirednesslevels >= 50 && tirednesslevels <= 75
	{
		"%(wilrefercaps) seems tired."
		"You have a tired scientist on your computer."
		"You have a tired scientist on your computer. Maybe you should offer him some coffee."
		"You have a scientist on your computer that really should take a nap."
	}
	elseif tirednesslevels >= 75
	{
		"%(wilrefercaps) seems more than just tired."
		"You have a very sleepy scientist on your computer."
		"You have a very sleepy scientist on your computer. Coffee might not fix this."
	}
	elseif tirednesslevels <= 50 && tirednesslevels >= 25
	{
		"%(wilrefercaps) seems a little tired."
		"%(wilrefercaps) seems a little tired, but it's nothing that caffeine can't fix."
	}
	elseif tirednesslevels <= 25 && tirednesslevels >= 0
	{
		"%(wilrefercaps) seems to have a decent amount of energy."
		"That scientist on your computer seems to be doing okay in regards to his energy levels."
	}
	elseif tirednesslevels <= 0 && tirednesslevels >= -25
	{
		"%(wilrefercaps) has a bit of energy to spare."
		"%(wilrefercaps) must have had a good amount of sleep."
		"You have a scientist on your computer that isn't currently tired."
	}
	else // assuming it's way below -25
	{
		"%(wilrefercaps) has a lot of energy right now."
		"%(wilrefercaps) has a lot of energy to spare right now."
		"%(wilrefercaps) would probably be bouncing off the walls if he weren't so polite."
		"%(wilrefercaps) would probably be bouncing off the walls if he wasn't a gentleman."
		"No more coffee for the scientist."
		"No more coffee for this scientist."
	}
	--
	"\n\n[half]"
	--
	"You've pet him a total of %(totalpets) times.\n\n[half]You've punched him a total of %(totalpunches) times."
	--
	--; "\n\n[half]\_q"
	--; "\![*]\q[Back to main menu,OnMenuRun]\e"
}

//----------Function Menu----------
OnFunctionMenu
{
	"\0\b2"
	--
	if totalpunches >= 5
	{
		"\s[0]..."
	}
	else
	{
		if annoyancelevels >= 50
		{
			"\s[0]What do you want now?"
		}
		if tirednesslevels >= 75
		{
			"\s[0]...Nooooooo. Wilson isn't here right now."
			"\s[0]...I'm tired. Can you make this quick?"
			"\s[0]Mm? Functions? Oh, right, that's this menu..."
		}
		"\s[0]Sure,\w4 what do you want me to do?"
		"\s[0]There are things that I can do here, thankfully."
		"\s[0]Hmm. I don't think you'll need assistance for most of these things, but... regardless, what do you need?"
		"\s[0]I can definitely send- no, wait, I'm limited to checking how many emails you have."
	}
	--
	--; "\n\n\_q"
	--; "\![*]\q[Check Email,script:\![biff\]]\n"
	--; "\![*]\q[Fix the Clock,script:\![execute,sntp\]]\n"
	--; "\![*]\q[Open Calendar,OpenCalendar]\n"
	--; "\![*]\q[Open SSP Preferences,SSPPrefs]\n"
	--; "\![*]\q[Empty Recycle Bin,RecycleBin]\n"
	--; "\![*]\q[Show System Information,SystemInfo]\n"
	--; "\![*]\q[Report a bug,BugReport]\n"
	--; "\![*]\q[Check for updates,UpdateCheck]\n"
	--; "\![*]\q[Changelog,OnChangeLog]\n\n"
	--; "\![*]\q[Back to main menu,OnMenuRun]\e"
}

Select.OpenCalendar
{
	if annoyancelevels >= 50
	{
		"\0\s[0]You have a calendar in the bottom right of your screen! I don't get why you're not using that one!\e"
		"\0\s[0]Fiiiine. You do know that you have a calendar right in the bottom... right of your screen? Actually, it'd be bottom-left for me..."
	}
	if tirednesslevels >= 75
	{
		"\0\s[0]I wanna sleep until next Thursday..."
	}
	"\0\s[0]Sure,\w4 here's the calendar."
	"\0\s[0]You want to check the calendar?\w8 Alright, here you go."
	"\0\s[0]Ah, checking the date for an event?"
	--
	"\![open,calendar]\e"
}

Select.SSPPrefs
{
	if annoyancelevels >= 50
	{
		"\0\s[0]Can't you right click? Ugh, here."
		"\0\s[0]...Seriously? You can get to it by just right clicking me. Ugh, fine, here."
	}
	if tirednesslevels >= 75
	{
		"\0\s[0]You do know that the right click button exists, right? I'm tired. Here, quit bothering me."
	}
	"\0\s[0]Here's the SSP Preferences menu."
	"\0\s[0]The preferences menu? Alright, let's see..."
	--
	"\![open,configurationdialog]\e"
}

Select.RecycleBin
{
	_gomicheck = FUNCTIONEX("saori/gomi.dll", "-n") //Gets the number of items in the recycle bin
	
	"Can't you do it yourself?\w8Ugh, fine.\w8\w8\s[-1]\w8\w8\w8\w8\n\n"
	--
	if _gomicheck > 0 //If there was something to empty
	{
		_gomi = FUNCTIONEX("saori/gomi.dll", "-f") //Calling the Saori to empty the recycle bin
		_s = ""; if _gomicheck != 1; _s = "s" //Plural check
		
		"\s[0]Done.\w8\w8 %(_gomicheck) item%(_s) cleared."
	}
	else //If it's empty
	{
		if annoyancelevels >= 50
		{
			"\s[0]Well, that was a waste of time. Your Recycling Bin is empty. I can't clean up what's already clean."
		}
		"\s[0]It was empty."
		"\s[0]It's empty."
	}
	--
	"\n\n\![*]\q[Back to functions menu,OnFunctionMenu]\n\![*]\q[I'm done,cancelnodialogue]\e"
}

Select.SystemInfo //Partially copied from the GT template, but I tweaked a few things
{
	os_name = FUNCTIONEX("saori/saori_cpuid.dll","os.name")
	os_version = FUNCTIONEX("saori/saori_cpuid.dll","os.version")
	cpu_name = FUNCTIONEX("saori/saori_cpuid.dll","cpu.name")
	cpu_clockex = FUNCTIONEX("saori/saori_cpuid.dll","cpu.clockex")
	
	--; "\0\b[2]\_q\f[anchorstyle,none]"
	--; "OS: \_a[OnBlank]%(os_name) %(os_version)\_a\n"
	--; "Memory Load: \_a[OnBlank]%(memoryload)%\_a\n"
	--; "Physical Memory: \_a[OnBlank]%(memoryavailphys) KB\_a\n"
	--; "CPU: \_a[OnBlank]%(cpu_name) %(cpu_clockex)MHz\_a\n"
	--; "Uptime: \_a[OnBlank]%(systemuphour):%(systemupminute):%(systemupsecond)\_a\n\n"
	--; "Ukagaka: \_a[OnBlank]%property[baseware.version]\_a\n\n"
	--; "\![*]\q[Back to functions,OnFunctionMenu]\n"
	--; "\![*]\q[Done,cancelnodialogue]\e"
}

Select.BugReport
{
	if annoyancelevels >= 50
	{
		"\0\s[0]No, we don't have a bug reporting system! I have no way to send the developer an email or whatever explaining the bugs you're currently experiencing. Not that the developer is fond of giving out his email given that the last time he had it on a public site, it got spammed by some idiot with a vengeance fetish."
	}
	"\0\s[0]Bug report? We don't have a formal process, but you can shoot the developer a message here: \_a[https://www.stabbsworth.tumblr.com/\_a! Or you can email him, but his email is a bit hard to come by. Something about somebody signing his usual email up to a bunch of religious email services."
	--
	"\n\n\![*]\q[Back to functions,OnFunctionMenu]\n\![*]\q[I'm done,cancelnodialogue]\e"
}

Select.UpdateCheck //Starts an update check
{
	"\![updatebymyself]\e"
}



//----------Config Menu----------
OnConfigMenu //I moved changing name/pronouns/birthday over to Nameteach, because they're info about the user
{
	FixDefaultOptions
	--
	if "OnUserBorn" _in_ reference0; {birthday = oldbirthday; ERASEVAR("oldbirthday")} //resets the birthday to the old values, erases the temp variable
	"\_q\b2\![close,inputbox,%(reference0)]"
	--
	--; "\f[align,center]—Config—\n\n\f[align,default]"
	--; "\![*]Your name: \_a[OnChangeName]%(username)\_a\n"
	--; "\![*]Your pronouns: \_a[OnChangePronoun]%(Capitalize(heshe))/%(Capitalize(himher))/%(Capitalize(hisher))\_a\n"
	--; "\![*]Your birthday: \_a[OnChangeBirthday]%(birthday[0])\_a\n"
	--; "\![*]Your hemisphere: \_a[OnToggleHemisphere]%(hemisphere)\_a\n\n"
	--; "\![*]Talk rate: \_a[OnChangeTalk]%(talkrate)\_a\n"
	--; "\![*]Hour Notifications: \_a[OnToggleHourNotifs]%(HourNotifs)\_a\n\n"
	--; "\![*]Auto update checks: \_a[OnToggleUpdate]%(AutoUpdates[0])\_a\n"
	--; "\![*]Enable Uninstall? \_a[OnToggleUninstall]%(deleteshitai)\_a\n\n"
	--; "\![*]\q[Back to the menu,OnMenuRun]\e"
}

//This is here in case the variables get erased. The buttons will be set to default so the user has something to click in the config menu. This has happened to my users before and resetting them is a painful process. Do not remove these, you'll want to add in new ones for any toggle buttons you have in the config menu. This is also called in BootVars and UpdateVars, which is why it's separate from the config menu itself.
FixDefaultOptions
{
	if username == ""; username = "User"
	if heshe == ""; {heshe = "they"; himher = "them"; hisher = "their"; hesshes = "they're"}
	if birthday[0] == ""; birthday[0] = "???"
	if hemisphere == ""; hemisphere = "Northern"
	if talkrate == ""; {talkrate = "every 5 minutes"; aitalkinterval = 300}
	if deleteshitai == ""; deleteshitai = "Off"
	if AutoUpdates[0] == ""; AutoUpdates[0] = "On"
	if HourNotifs == ""; HourNotifs = "On"
}

OnToggleHemisphere
{
	if hemisphere != "Northern"; hemisphere = "Northern"
	else; hemisphere = "Southern"
	--
	OnConfigMenu
}

OnChangeTalk
{
	"\0\s[0]How often should I talk?\w8 Right now it's %(talkrate)\n\n"
	--
	--; "\![*]\q[Every 30 seconds,OnTalkRate,30]\n"
	--; "\![*]\q[Every minute,OnTalkRate,60]\n"
	--; "\![*]\q[Every 3 minutes,OnTalkRate,180]\n"
	--; "\![*]\q[Every 5 minutes,OnTalkRate,300]\n"
	--; "\![*]\q[Don't speak,OnTalkRate,0]\n\n"
	--; "\![*]\q[Nevermind,OnConfigMenu]\e"
}

OnToggleHourNotifs
{
	if HourNotifs != "On"; HourNotifs = "On"
	else; HourNotifs = "Off"
	--
	OnConfigMenu
}

OnTalkRate
{
	aitalkinterval = TOINT(reference0) //this changes the talk rate, in seconds. reference0 is sent from the menu options above
	
	if reference0 == "30"
	{
		talkrate = "every 30 seconds" //this displays the talk rate in the menu
		
		if annoyancelevel >= 50
		{
			"\0\s[0]Fine, I'll talk every thirty seconds. Not that I have much to talk about."
			"\0\s[0]Wow. And what happens if I go mute? I'll talk every thirty seconds. Don't expect it to be decent, though."
		}
		"\0\s[0]Ok,\w4 every 30 seconds it is."
		"\0\s[0]I'll be speaking every thirty seconds."
		"\0\s[0]I'll be speaking every thirty seconds. If you want to change this to another value, you know where to find it, right?"
		"\0\s[0]%(username), I really don't have that much to talk about, honestly. It's mostly just survival stuff, eheh."
	}
	elseif reference0 == "60"
	{
		talkrate = "every minute"
		
		"\0\s[0]Ok,\w4 every minute it is."
	}
	elseif reference0 == "180"
	{
		talkrate = "every 3 minutes"
		
		"\0\s[0]Ok,\w4 every 3 minutes."
	}
	elseif reference0 == "300"
	{
		talkrate = "every 5 minutes"
		
		"\0\s[0]Ok,\w4 every 5 minutes."
		"\0\s[0]I'll be speaking every five minutes."
		"\0\s[0]I'll be speaking every five minutes. This is the maximum time allowed between talking for this update, but you can change it in the menu. You know where to find it, right?"
	}
	else
	{
		if totalpunches >= 5
		{
			talkrate = "never"
			"\0\s[0]...I-I'll shut up. I'll shut up.\e"
		}
		else
		{
			talkrate = "never"
			annoyancelevels += 25
			"\0\s[0]Very subtle, %(username)."
		}
	}
	--
	"\n\n\![*]\q[Back to config,OnConfigMenu]\n\![*]\q[I'm done,cancelnodialogue]\e"
}

OnToggleUpdate
{
	if AutoUpdates[0] != "On"; AutoUpdates[0] = "On"
	else; AutoUpdates[0] = "Off"
	--
	OnConfigMenu
}

OnToggleUninstall
{
	if deleteshitai != "On"; deleteshitai = "On"
	else; deleteshitai = "Off"
	--
	OnConfigMenu
}

//----------Misc Functions----------

//Menu has timed out
OnChoiceTimeout
{
	annoyancelevels += 5
	if annoyancelevels >= 50
	{
		"\0\s[0]Helloooooo? It's rude to ignore people when they're talking to you, you know.\e"
		"\0\s[0]Bah. Not like anyone listens to me anyways.\e"
	}
	elseif tirednesslevels >= 75
	{
		"\0\s[0]It's fiiiine. I don't have a lot to talk about.\e"
	}
	elseif totalpunches >= 5
	{
		"\0\s[0]...\e"
	}
	else
	{
		"\0\s[0]Are you still there?\e"
		"\0\s[0]Did you fall asleep on the computer or something, %(username)?\e"
		"\0\s[0]...Hm. I suppose not.\e"
		"\0\s[0]You aren't bored of me already, are you?\e"
		"\0\s[0]Hmm. Your lack of response has been noted.\e"
	}
}

//If the main menu has been cancelled
Select.Cancel
{
	if totalpunches >= 5
	{
		"\0\s[0]...Hhhhf.\e"
		"\0\s[0]"
	}
	else
	{
		"\0\s[0]Alright.\e"
		"\0\s[0]\e"
		"\0\s[0]What was the point of that, then?\e"
	}
}

OnTestVar
{
	ubrokeit = 0
	"\0\s[0]Testing.\e"
	
	LOGGING("This is a debug function! This text will show up in Tama, or in the SHIORI log! You can also output variables and such with this function. This is super handy for debugging without having to output data to your ghost's balloon! Especially for things like loops, where you need to see certain variables at every step of the loop. Make good use of it!")
}


//============Kero Menu============

OpenKeroMenu
{
	"\1\s[10]Yo."
	"\1\s[10]Hi."
	--
	OnKeroMenu
}

OnKeroMenu
{
	//Fill in as you like
}